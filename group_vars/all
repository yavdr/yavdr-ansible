---
# file: group_vars/all

branch: experimental
ppa_owner: 'ppa:yavdr'
# add the following PPAs
repositories:
  - '{{ ppa_owner }}/{{branch}}-main'
  - '{{ ppa_owner }}/{{branch}}-vdr'
  - '{{ ppa_owner }}/{{branch}}-kodi'
# properties of the user vdr and vdr-related options
# NOTE: user name, uid and confdir must match the values set by the vdr package
vdr:
  user: vdr
  group: vdr
  uid: 666
  gid: 666
  home: /var/lib/vdr
  etc_confdir: /etc/vdr
  confdir: /var/lib/vdr
  recdir: /srv/vdr/video
  hide_first_recording_level: false
  safe_dirnames: true  # escape characters (useful for windows clients and FAT/NTFS file systems)
  override_vdr_charset: ""  # set the desired charset, e.g. "ISO-8859-9"

# wait for dvb devices by adapter number
# NOTE: This only works for devices that are discoverable by udev, not userspace drivers like sundtek tuners!
# e.g. wait_for_dvb_devices: [0, 1] to wait for /dev/dvb/adapter0 and /dev/dvb/adapter1
wait_for_dvb_devices: []

# this allows to set up streamdev-client - set the server, port and number of devices
# streamdev_client_remote_ip: "192.168.0.104"
# streamdev_client_remote_port: 2004
# streamdev_client_num_provided_systems: 1

# copy channels.conf from a local file
# vdr_channels_conf: /path/to/channels.conf

# download channels.conf from a given url (supports HTTP(S) and FTP)
# vdr_channels_conf_url: http://example.com/vdr/channels.conf

# choose the vdr output plugin (defaults to vdr-plugin-softhddevice resp. vdr-plugin-rpihddevice)
# vdr_output_plugin: vdr-plugin-softhddevice

# add the vdr plugins you want to install
vdr_plugins:
  - vdr-plugin-devstatus
  - vdr-plugin-markad

# set the name of the output plugin (as used by vdrctl) - this defaults to softhddevice on x64 platforms and rpihddevice on Raspberry Pi 2 and 3
# selected_frontend: softhddevice

# set the package name of the output plugin - this defaults to vdr-plugin-softhddevice on x64 platforms and vdr-plugin-rpihddevice on Raspberry Pi 2 and 3
# vdr_output_plugin: vdr-plugin-softhddevice-cuvid

# IP (range) filter for vdr and plugins (this must be an array):
# vdr_allowed_hosts:
#   - 192.168.0.0/24

# hosts and subnets for svdrphosts.conf (overrides vdr_allowed_hosts):
# vdr_svdrphosts:
#   - 192.168.0.0/24

# hosts and subnets for allowed_hosts.conf of xineliboutput (overrides vdr_allowed_hosts):
# xineliboutput_allowed_hosts:
#   - 192.168.0.0/24

# hosts and subnets for allowed_hosts.conf of vnsiserver (overrides vdr_allowed_hosts):
# vnsiserver_allowed_hosts:
#   - 192.168.0.0/24

# hosts and subnets for streamdevhosts.conf (overrides vdr_allowed_hosts):
# streamdev_server_allowed_hosts:
#   - 192.168.0.0/24
# dictionary of directories for (shared) files. Automatically exported via NFS and Samba if those roles are enabled
media_dirs:
  audio: /srv/audio
  video: /srv/video
  pictures: /srv/picture
  files: /srv/files
  backups: /srv/backups
  recordings: '{{ vdr.recdir }}'
nfs:
  insecure: false  # set to true for OS X clients or if you plan to use libnfs as unprivileged user (e.g. KODI)
samba:
  workgroup: YAVDR
  windows_compatible: '{{ vdr.safe_dirnames }}'  # set to true to disable unix extensions, enable follow symlinks and wide links
# additional packages you want to install
extra_packages:
  - bpython
  - bpython3
  - htop
  - tree
  - vim
  - w-scan
  - t2scan
  - vdrpbd
# choose which channellogos to download from the github.com/Jasmeet181 mediaportal-*-logos repositories
# currently suported langugages/regions are: au, be, cz, de, es, ie, il, it, nordic, nz, ru, uk, us
#
#channellogo_languages:
#  - au
#  - be
#  - cz
#  - de
#  - es
#  - ie
#  - il
#  - it
#  - nordic
#  - nz
#  - ru
#  - uk
#  - us
frontend: vdr

# vdr shutdown command - SHUTDOWNCMD variable in /etc/default/vdr
# for standby use "/bin/systemctl suspend"
vdr_shutdown_command: poweroff

# to force quadratic pixels set this variable to the dpi you want
# nvidia_force_dpi: 96

#system:
#  shutdown: poweroff

# choose one of acpiwakeup, stm32wakeup
wakeup_method: acpiwakeup

# start given number of minutes earlier than the wakeuptime set by vdr
wakeup_start_ahead: 5

# set days of the week for automatic wakeup (1=Monday...7=Sunday),
# set empty string to disable wakeup
# eg. to wake up on Monday and Friday:
# wakeup_days: "1 5"
wakeup_days: ""

# set wakeup time for automatic wakeup
# set empty string to disable
# e.g. for wakeup at midnight:
# wakeup_time: "00:00"
wakeup_time: ""

# settings for grub
grub:
  timeout: 0
  boot_options: quiet splash

# unload dvb drivers before standby, reload them afterwards.
# disable this setting if
# - you don't have local dvb devices (e.g. satip client)
# - your dvb drivers have problems being unloaded
standby_reload_dvb: true

# settings for vdr-addon-lifeguard-ng
# the following settings prevent the shutdown
# if a nfs, samba or ssh connection to this machine is open
lifeguard_enable_nfs: True
lifeguard_enable_samba: True
lifeguard_enable_ssh: True
# list of ip addresses or hostnames which should prevent shutdown
# if the can be pinged
lifeguard_hosts: []
# list of users which sould prevent shutdown if they are logged in
# this is somewhat redudant because systemd check this, too
lifeguard_users: []
# check for local processes
lifeguard_processes: []
# check for active tcp connections of local processes
# syntax: <processname> [:] <port>
lifeguard_tcp:
  - vdr 3000  # don't shutdown if there is an active streamdev connection
# Serial device to configure for a homebrew receiver.
# Choose one of the devices predefined in the variable serial_ir_data in roles/serial-ir/defaults/main.yml
# ttyS0 (COM1), ttyS1 (COM2), ttyS2(COM3) or ttyS3 (COM4)
# or customize the variable as needed
#
serial_ir_device: ttyS0
# Key for the MPEG2-Decoder
#rpi_decode_mpg2: 0xdeadbeef

# Key for the wvc1-Decoder
#rpi_decode_wvc1: 0xdeadbeef

# Pin for the GPIO remote receiver
# rpi_ir_gpio_pin: 24

# Other example for the GPIO remote receiver that enables the pullup
# rpi_ir_gpio_pin: '22,gpio_in_pull=up'

# Pin for the GPIO remote sender (needs additional lirc configuration,
# which is at the moment beyond the scope of this playbook)
# rpi_ir_gpio_pin_tx: '18'

# Alternative IR remote sender example using the PWM 
# rpi_ir_pwm_pin_tx: '18'

# Add arbitrary lines to usercfg.txt
# rpi_user_config_line:
#   - '# A line'
#   - '# Another line'
#   - '# even more line'


# Set the memory for the GPU core - rpihddevice needs 256 MB, which is the default value set by the playbook
# rpi_gpu_mem = 256
