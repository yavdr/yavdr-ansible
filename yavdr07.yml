---
# file: yavdr07.yml
# this playbook sets up a complete yaVDR 0.7 installation

- name: set up yaVDR
  hosts: all
  become: true
  environment:
    LANG: "{{ default_locale | default('c.UTF-8') }}"

  pre_tasks:
    - name: update all packages if the action doesn't happen locally
      apt:
        name: "*"
        state: latest
        update_cache: true
      when: (ansible_host | default(inventory_hostname)) not in ['localhost', '127.0.0.1']

  roles:
    - yavdr-common               # install and configure the basic system
    - collect-facts              # query system facts
    - autoinstall-ubuntu-drivers # use ubuntu-drivers to install proprietary dirvers
                                 # (e.g. nvidia, virtualbox)
    - vdr                        # install vdr and related packages
    - vdr-plugin-menuorg         # install vdr-plugin-menuorg and customize menuorg.xml
    - autoinstall-virtualbox-guest
    - lifeguardng                # install and configure vdr-addon-lifeguard-ng
    - yavdr-network              # enable network client capabilities
    - samba-install              # install samba server
    - samba-config               # configure samba server
    - nfs-server                 # install nfs server
    - pulseaudio                 # install pulseaudio
    - yavdr-xorg                 # graphical session
    - yavdr-remote               # remote configuration files, services and scripts
    - yavdr-desktop              # openbox session with yavdr frontend script
    - osd2web                    # configure osd2web to run on the second display if there is any
    - autoinstall-satip          # install vdr-plugin-satip if a Sat>IP server has been found
    - autoinstall-targavfd       # install vdr-plugin-targavfd if display is connected
    - autoinstall-imonlcd        # install vdr-plugin-imonlcd if a matchind display is connected
    - autoinstall-imonvfd        # install vdr-plugin-imonvfd if a matchind display is connected
    - autoinstall-pvr350         # install vdr-plugin-pvr350 if a matching card is detected
    - autoinstall-hauppauge-pvr  # install vdr-plugin-pvrinput if a matching card is found
    - autoinstall-dvbsddevice    # install vdr-plugin-dvbsddevice if a matching card is detected
    # - autoinstall-dvbhddevice    # install vdr-plugin-dvbsddevice if a matching card is detected - NOTE: you need to compile and install the drivers yourself
    - autoinstall-hardware-irmp  # install yavdr-hardware-irmp if a matching usb device is detected
    - autoinstall-atric-usb      # preconfigure lircd for Atric IR-WakeupUSB receiver
    - autoinstall-yausbir        # preconfigure lircd for yaUsbIR receiver
    - autoinstall-dvbsky-firmware # download and install required firmware files for dvbsky cards
    - autoinstall-firmware       # download and install firmware files for dvb devices
    #- install-sundtek            # install and configure sundtek drivers
    #- serial-ir                  # configure a serial port for "homebrew" ir receivers (e.g. Atric V5)
    #- epgd                       # install vdr-epg-daemon (and vdr-plugin-epg2vdr)
    #- channelpedia               # upload channels.conf to channelpedia (see role description in Manual)
    - channellogos               # use channellogos provided by https://github.com/Jasmeet181/mediaportal-*-logos
                                 # set the variable channellogos_languages to a list of the langues you want (see group_vars/all)
                                  # and link them to /var/lib/channellogos/ - this needs at least 300 MB of storage
    - kodi
    - dvd                        # set up packages and a udev rule to allow kodi and other players
                                 # to play and eject optical media
    - wakeup                     # set up wakeup methods for rtc etc.
    - grub-config                # configure grub
    - set-output-plugin  # ensures that only one output plugin is active (a manual override is possible by setting selected_frontend to the name of the wanted output plugin)

  handlers:
    - import_tasks: handlers/main.yml
